services:
  frontend:
    build: ./frontend
    container_name: what2do-frontend
    ports:
      - "3000:3000"
    restart: on-failure
    networks:
      - what2do-network

  envoy:
    image: envoyproxy/envoy:dev-4b0495bb6bf09f97292a8b30b2e97b71cda59256
    container_name: what2do-envoy
    ports:
      - "10000:10000"
    volumes:
      - ./envoy/envoy.yaml:/etc/envoy/envoy.yaml
    networks:
      - what2do-network
  
  backend:
    build: ./backend
    container_name: what2do-backend
    env_file:
      - path: ./.env
        required: true
      - path: ./.env.override
        required: true
    tty: true
    ports:
      - ${BACKEND_PORT}:${BACKEND_PORT}
    #restart: on-failure
    volumes:
      - ./backend:/app
    depends_on:
      - postgresdb
      - postgresdb-test
    networks:
      - what2do-network

  postgresdb:
    image: postgres:latest
    container_name: what2do-postgresdb
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - DATABASE_HOST=${PROD_DB_HOST}
    ports:
      - ${DEV_DB_PORT}:${PROD_DB_PORT}
    volumes:
      - ./postgres/pg-data:/var/lib/postgresql/data
    networks:
      - what2do-network

  postgresdb-test:
    image: postgres:latest
    container_name: what2do-postgresdb-test
    environment:
      - POSTGRES_USER=${TEST_DB_USER}
      - POSTGRES_PASSWORD=${TEST_DB_PASSWORD}
      - POSTGRES_DB=${TEST_DB_NAME}
      - DATABASE_HOST=${PROD_TEST_DB_HOST}
    ports:
      - ${DEV_TEST_DB_PORT}:${PROD_TEST_DB_PORT}
    volumes:
      - ./postgres/pg-data-test:/var/lib/postgresql/data
    networks:
      - what2do-network

  migrate:
    build: ./migrate
    container_name: what2do-migrate
    env_file:
      - path: ./.env
        required: true
    volumes:
      - ./migrate/migrations:/migrations
    depends_on:
      - postgresdb
      - postgresdb-test
    networks:
      - what2do-network

volumes:
  pg-data:
  pg-data-test:

networks:
  what2do-network:
    driver: bridge